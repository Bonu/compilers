/* This file was generated by SableCC (http://www.sablecc.org/). */

package cpparser.analysis;

import cpparser.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAClassDeclsProgram(AClassDeclsProgram node);
    void caseAClassDeclsMultipleClassDecls(AClassDeclsMultipleClassDecls node);
    void caseAClassDeclareSingleClassDecls(AClassDeclareSingleClassDecls node);
    void caseAClassMembersClassDecl(AClassMembersClassDecl node);
    void caseAClassEmptyClassDecl(AClassEmptyClassDecl node);
    void caseATClassClassHdr(ATClassClassHdr node);
    void caseAClassMemberDeclsClassMemberDecls(AClassMemberDeclsClassMemberDecls node);
    void caseAClassMemberSingleClassMemberDecls(AClassMemberSingleClassMemberDecls node);
    void caseAFieldClassMember(AFieldClassMember node);
    void caseAMethodClassMember(AMethodClassMember node);
    void caseABlockClassMember(ABlockClassMember node);
    void caseASemicolonClassMember(ASemicolonClassMember node);
    void caseAMethodArgumentsMethodDecl(AMethodArgumentsMethodDecl node);
    void caseAMethodNoArgumentsMethodDecl(AMethodNoArgumentsMethodDecl node);
    void caseAVoidIdentifierMethodHdr(AVoidIdentifierMethodHdr node);
    void caseATypeIdentifierMethodHdr(ATypeIdentifierMethodHdr node);
    void caseAFormalFormals(AFormalFormals node);
    void caseAFormals(AFormals node);
    void caseATypeIdentifierFormal(ATypeIdentifierFormal node);
    void caseATypeIdentifierConstructorFormal(ATypeIdentifierConstructorFormal node);
    void caseAStmtsBlockBlock(AStmtsBlockBlock node);
    void caseAEmptyBlockBlock(AEmptyBlockBlock node);
    void caseAType1Field(AType1Field node);
    void caseAType2Field(AType2Field node);
    void caseAType3Field(AType3Field node);
    void caseAIntType(AIntType node);
    void caseACharType(ACharType node);
    void caseABoolType(ABoolType node);
    void caseAStringType(AStringType node);
    void caseAFloatType(AFloatType node);
    void caseAManyStmtsStmts(AManyStmtsStmts node);
    void caseASingleStmtStmts(ASingleStmtStmts node);
    void caseASimpleStmtStmt(ASimpleStmtStmt node);
    void caseAIfElseStmtStmt(AIfElseStmtStmt node);
    void caseACondition(ACondition node);
    void caseAIdentifierLocalDecl(AIdentifierLocalDecl node);
    void caseAIdentifierExprLocalDecl(AIdentifierExprLocalDecl node);
    void caseAIdentifierIntLitLocalDecl(AIdentifierIntLitLocalDecl node);
    void caseALocalDeclSimpleStmt(ALocalDeclSimpleStmt node);
    void caseAFieldAccessExprSimpleStmt(AFieldAccessExprSimpleStmt node);
    void caseAMethodCallSimpleStmt(AMethodCallSimpleStmt node);
    void caseAReturnSimpleStmt(AReturnSimpleStmt node);
    void caseAReturnExprSimpleStmt(AReturnExprSimpleStmt node);
    void caseABlockSimpleStmt(ABlockSimpleStmt node);
    void caseAWhileSimpleStmt(AWhileSimpleStmt node);
    void caseADoWhileSimpleStmt(ADoWhileSimpleStmt node);
    void caseASimpleStmt(ASimpleStmt node);
    void caseAFaIdFieldAccess(AFaIdFieldAccess node);
    void caseAFaIdDotIdFieldAccess(AFaIdDotIdFieldAccess node);
    void caseAArrayRefFieldAccess(AArrayRefFieldAccess node);
    void caseAArrayRefIdArrayRef(AArrayRefIdArrayRef node);
    void caseAArrayRefIddotidArrayRef(AArrayRefIddotidArrayRef node);
    void caseAMethodCallIdMethodCall(AMethodCallIdMethodCall node);
    void caseAMethodCallIdArgsMethodCall(AMethodCallIdArgsMethodCall node);
    void caseAMethodCallIddotidMethodCall(AMethodCallIddotidMethodCall node);
    void caseAMethodCallIddoidArgsMethodCall(AMethodCallIddoidArgsMethodCall node);
    void caseAArgsExprArgs(AArgsExprArgs node);
    void caseAArgsCommaExprArgs(AArgsCommaExprArgs node);
    void caseAExprOrExpr(AExprOrExpr node);
    void caseAExprAndExpr(AExprAndExpr node);
    void caseAExprOnlyExpr(AExprOnlyExpr node);
    void caseAE3lte3E2(AE3lte3E2 node);
    void caseAE3gte3E2(AE3gte3E2 node);
    void caseAE3lteqe3E2(AE3lteqe3E2 node);
    void caseAE3gteqe3E2(AE3gteqe3E2 node);
    void caseAE3eqe3E2(AE3eqe3E2 node);
    void caseAE3neqe3E2(AE3neqe3E2 node);
    void caseAE3onlyE2(AE3onlyE2 node);
    void caseAE3pluse4E3(AE3pluse4E3 node);
    void caseAE3minuse4E3(AE3minuse4E3 node);
    void caseAE4onlyE3(AE4onlyE3 node);
    void caseAE4mule5E4(AE4mule5E4 node);
    void caseAE4dive5E4(AE4dive5E4 node);
    void caseAE4mode5E4(AE4mode5E4 node);
    void caseAE5onlyE4(AE5onlyE4 node);
    void caseAE5complementE5(AE5complementE5 node);
    void caseAAdde5E5(AAdde5E5 node);
    void caseAMinuse5E5(AMinuse5E5 node);
    void caseAPrimaryE5(APrimaryE5 node);
    void caseAPrimaryFieldAccessPrimary(APrimaryFieldAccessPrimary node);
    void caseAPrimaryMethodCallPrimary(APrimaryMethodCallPrimary node);
    void caseAPrimaryIntLitPrimary(APrimaryIntLitPrimary node);
    void caseAPrimaryCharLitPrimary(APrimaryCharLitPrimary node);
    void caseAPrimaryStrLitPrimary(APrimaryStrLitPrimary node);
    void caseAPrimaryFloatLitPrimary(APrimaryFloatLitPrimary node);
    void caseAPrimaryTruePrimary(APrimaryTruePrimary node);
    void caseAPrimaryFalsePrimary(APrimaryFalsePrimary node);
    void caseAPrimary(APrimary node);

    void caseTWhiteSpace(TWhiteSpace node);
    void caseTSlcomment(TSlcomment node);
    void caseTMlcomment(TMlcomment node);
    void caseTDoccomment(TDoccomment node);
    void caseTComma(TComma node);
    void caseTDot(TDot node);
    void caseTAssign(TAssign node);
    void caseTLt(TLt node);
    void caseTGt(TGt node);
    void caseTComplement(TComplement node);
    void caseTBitComplement(TBitComplement node);
    void caseTQuestion(TQuestion node);
    void caseTColon(TColon node);
    void caseTHash(THash node);
    void caseTEq(TEq node);
    void caseTLteq(TLteq node);
    void caseTGteq(TGteq node);
    void caseTNeq(TNeq node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTPlusPlus(TPlusPlus node);
    void caseTMinusMinus(TMinusMinus node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTStar(TStar node);
    void caseTDiv(TDiv node);
    void caseTBitAnd(TBitAnd node);
    void caseTBitOr(TBitOr node);
    void caseTBitXor(TBitXor node);
    void caseTMod(TMod node);
    void caseTLeftFbrace(TLeftFbrace node);
    void caseTRightFbrace(TRightFbrace node);
    void caseTSemicolon(TSemicolon node);
    void caseTLeftSbrace(TLeftSbrace node);
    void caseTRightSbrace(TRightSbrace node);
    void caseTArrow(TArrow node);
    void caseTLeftBrace(TLeftBrace node);
    void caseTRightBrace(TRightBrace node);
    void caseTDquote(TDquote node);
    void caseTShiftLeft(TShiftLeft node);
    void caseTSignedShiftRight(TSignedShiftRight node);
    void caseTUnsignedShiftRight(TUnsignedShiftRight node);
    void caseTPlusAssign(TPlusAssign node);
    void caseTMinusAssign(TMinusAssign node);
    void caseTStarAssign(TStarAssign node);
    void caseTDivAssign(TDivAssign node);
    void caseTBitAndAssign(TBitAndAssign node);
    void caseTBitOrAssign(TBitOrAssign node);
    void caseTBitXorAssign(TBitXorAssign node);
    void caseTModAssign(TModAssign node);
    void caseTShiftLeftAssign(TShiftLeftAssign node);
    void caseTSignedShiftRightAssign(TSignedShiftRightAssign node);
    void caseTUnsignedShiftRightAssign(TUnsignedShiftRightAssign node);
    void caseTBool(TBool node);
    void caseTBreak(TBreak node);
    void caseTChar(TChar node);
    void caseTKconst(TKconst node);
    void caseTContinue(TContinue node);
    void caseTDo(TDo node);
    void caseTDouble(TDouble node);
    void caseTElse(TElse node);
    void caseTEnum(TEnum node);
    void caseTFalse(TFalse node);
    void caseTFloat(TFloat node);
    void caseTIf(TIf node);
    void caseTInt(TInt node);
    void caseTKClass(TKClass node);
    void caseTLong(TLong node);
    void caseTNew(TNew node);
    void caseTNull(TNull node);
    void caseTPrivate(TPrivate node);
    void caseTProtected(TProtected node);
    void caseTPublic(TPublic node);
    void caseTReturn(TReturn node);
    void caseTShort(TShort node);
    void caseTSigned(TSigned node);
    void caseTStatic(TStatic node);
    void caseTString(TString node);
    void caseTStruct(TStruct node);
    void caseTThis(TThis node);
    void caseTTrue(TTrue node);
    void caseTWhile(TWhile node);
    void caseTUnsigned(TUnsigned node);
    void caseTVoid(TVoid node);
    void caseTIdentifier(TIdentifier node);
    void caseTKsemicolon(TKsemicolon node);
    void caseTFloatLiteral(TFloatLiteral node);
    void caseTStringLiteral(TStringLiteral node);
    void caseTIntegerLiteral(TIntegerLiteral node);
    void caseTCharacterLiteral(TCharacterLiteral node);
    void caseEOF(EOF node);
}
