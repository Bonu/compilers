/* This file was generated by SableCC (http://www.sablecc.org/). */

package cpparser.node;

import cpparser.analysis.*;

@SuppressWarnings("nls")
public final class AClassMemberDeclsClassMemberDecls extends PClassMemberDecls
{
    private PClassMemberDecls _classMemberDecls_;
    private PClassMember _left_;

    public AClassMemberDeclsClassMemberDecls()
    {
        // Constructor
    }

    public AClassMemberDeclsClassMemberDecls(
        @SuppressWarnings("hiding") PClassMemberDecls _classMemberDecls_,
        @SuppressWarnings("hiding") PClassMember _left_)
    {
        // Constructor
        setClassMemberDecls(_classMemberDecls_);

        setLeft(_left_);

    }

    @Override
    public Object clone()
    {
        return new AClassMemberDeclsClassMemberDecls(
            cloneNode(this._classMemberDecls_),
            cloneNode(this._left_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAClassMemberDeclsClassMemberDecls(this);
    }

    public PClassMemberDecls getClassMemberDecls()
    {
        return this._classMemberDecls_;
    }

    public void setClassMemberDecls(PClassMemberDecls node)
    {
        if(this._classMemberDecls_ != null)
        {
            this._classMemberDecls_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._classMemberDecls_ = node;
    }

    public PClassMember getLeft()
    {
        return this._left_;
    }

    public void setLeft(PClassMember node)
    {
        if(this._left_ != null)
        {
            this._left_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._left_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._classMemberDecls_)
            + toString(this._left_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._classMemberDecls_ == child)
        {
            this._classMemberDecls_ = null;
            return;
        }

        if(this._left_ == child)
        {
            this._left_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._classMemberDecls_ == oldChild)
        {
            setClassMemberDecls((PClassMemberDecls) newChild);
            return;
        }

        if(this._left_ == oldChild)
        {
            setLeft((PClassMember) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
