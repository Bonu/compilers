/* This file was generated by SableCC (http://www.sablecc.org/). */

package cpparser.analysis;

import java.util.*;
import cpparser.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGoal(AGoal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassDeclsProgram(AClassDeclsProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassDeclsMultipleClassDecls(AClassDeclsMultipleClassDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassDeclareSingleClassDecls(AClassDeclareSingleClassDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassMembersClassDecl(AClassMembersClassDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassEmptyClassDecl(AClassEmptyClassDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATClassClassHdr(ATClassClassHdr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassMemberDeclsClassMemberDecls(AClassMemberDeclsClassMemberDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAClassMemberSingleClassMemberDecls(AClassMemberSingleClassMemberDecls node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldClassMember(AFieldClassMember node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodClassMember(AMethodClassMember node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlockClassMember(ABlockClassMember node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASemicolonClassMember(ASemicolonClassMember node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodArgumentsMethodDecl(AMethodArgumentsMethodDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodNoArgumentsMethodDecl(AMethodNoArgumentsMethodDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVoidIdentifierMethodHdr(AVoidIdentifierMethodHdr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeIdentifierMethodHdr(ATypeIdentifierMethodHdr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalFormals(AFormalFormals node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormals(AFormals node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeIdentifierFormal(ATypeIdentifierFormal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATypeIdentifierConstructorFormal(ATypeIdentifierConstructorFormal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtsBlockBlock(AStmtsBlockBlock node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyBlockBlock(AEmptyBlockBlock node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAType1Field(AType1Field node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAType2Field(AType2Field node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAType3Field(AType3Field node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACharType(ACharType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolType(ABoolType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringType(AStringType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFloatType(AFloatType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAManyStmtsStmts(AManyStmtsStmts node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleStmtStmts(ASingleStmtStmts node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleStmtStmt(ASimpleStmtStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfElseStmtStmt(AIfElseStmtStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACondition(ACondition node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentifierLocalDecl(AIdentifierLocalDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentifierExprLocalDecl(AIdentifierExprLocalDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentifierIntLitLocalDecl(AIdentifierIntLitLocalDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALocalDeclSimpleStmt(ALocalDeclSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFieldAccessExprSimpleStmt(AFieldAccessExprSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodCallSimpleStmt(AMethodCallSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReturnSimpleStmt(AReturnSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReturnExprSimpleStmt(AReturnExprSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlockSimpleStmt(ABlockSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileSimpleStmt(AWhileSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADoWhileSimpleStmt(ADoWhileSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleStmt(ASimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFaIdFieldAccess(AFaIdFieldAccess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFaIdDotIdFieldAccess(AFaIdDotIdFieldAccess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayRefFieldAccess(AArrayRefFieldAccess node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayRefIdArrayRef(AArrayRefIdArrayRef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayRefIddotidArrayRef(AArrayRefIddotidArrayRef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodCallIdMethodCall(AMethodCallIdMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodCallIdArgsMethodCall(AMethodCallIdArgsMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodCallIddotidMethodCall(AMethodCallIddotidMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodCallIddoidArgsMethodCall(AMethodCallIddoidArgsMethodCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgsExprArgs(AArgsExprArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgsCommaExprArgs(AArgsCommaExprArgs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprOrExpr(AExprOrExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprAndExpr(AExprAndExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprOnlyExpr(AExprOnlyExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3lte3E2(AE3lte3E2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3gte3E2(AE3gte3E2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3lteqe3E2(AE3lteqe3E2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3gteqe3E2(AE3gteqe3E2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3eqe3E2(AE3eqe3E2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3neqe3E2(AE3neqe3E2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3onlyE2(AE3onlyE2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3pluse4E3(AE3pluse4E3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE3minuse4E3(AE3minuse4E3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE4onlyE3(AE4onlyE3 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE4mule5E4(AE4mule5E4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE4dive5E4(AE4dive5E4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE4mode5E4(AE4mode5E4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE5onlyE4(AE5onlyE4 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAE5complementE5(AE5complementE5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdde5E5(AAdde5E5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinuse5E5(AMinuse5E5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryE5(APrimaryE5 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryFieldAccessPrimary(APrimaryFieldAccessPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryMethodCallPrimary(APrimaryMethodCallPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryIntLitPrimary(APrimaryIntLitPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryCharLitPrimary(APrimaryCharLitPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryStrLitPrimary(APrimaryStrLitPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryFloatLitPrimary(APrimaryFloatLitPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryTruePrimary(APrimaryTruePrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimaryFalsePrimary(APrimaryFalsePrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrimary(APrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhiteSpace(TWhiteSpace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSlcomment(TSlcomment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMlcomment(TMlcomment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoccomment(TDoccomment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComplement(TComplement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBitComplement(TBitComplement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTQuestion(TQuestion node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHash(THash node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlusPlus(TPlusPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinusMinus(TMinusMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBitAnd(TBitAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBitOr(TBitOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBitXor(TBitXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeftFbrace(TLeftFbrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRightFbrace(TRightFbrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeftSbrace(TLeftSbrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRightSbrace(TRightSbrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTArrow(TArrow node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLeftBrace(TLeftBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRightBrace(TRightBrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDquote(TDquote node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTShiftLeft(TShiftLeft node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSignedShiftRight(TSignedShiftRight node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUnsignedShiftRight(TUnsignedShiftRight node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlusAssign(TPlusAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinusAssign(TMinusAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStarAssign(TStarAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivAssign(TDivAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBitAndAssign(TBitAndAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBitOrAssign(TBitOrAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBitXorAssign(TBitXorAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTModAssign(TModAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTShiftLeftAssign(TShiftLeftAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSignedShiftRightAssign(TSignedShiftRightAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUnsignedShiftRightAssign(TUnsignedShiftRightAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBreak(TBreak node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTChar(TChar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKconst(TKconst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTContinue(TContinue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDouble(TDouble node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnum(TEnum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloat(TFloat node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKClass(TKClass node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLong(TLong node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrivate(TPrivate node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProtected(TProtected node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPublic(TPublic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTShort(TShort node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSigned(TSigned node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStatic(TStatic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStruct(TStruct node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThis(TThis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTUnsigned(TUnsigned node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTKsemicolon(TKsemicolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFloatLiteral(TFloatLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringLiteral(TStringLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIntegerLiteral(TIntegerLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCharacterLiteral(TCharacterLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
